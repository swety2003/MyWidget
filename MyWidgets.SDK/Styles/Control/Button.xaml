<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ct="clr-namespace:MyWidgets.SDK.Converters"
    xmlns:pu="clr-namespace:Panuon.WPF.UI;assembly=Panuon.WPF.UI"
    xmlns:purs="clr-namespace:Panuon.WPF.UI.Resources;assembly=Panuon.WPF.UI">

    <ResourceDictionary.MergedDictionaries>

        <ResourceDictionary>
            <ct:CornerRadiusCac x:Key="CornerRadiusCac" />
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="WCBtnStyle" TargetType="Button">
        <Setter Property="Width" Value="42" />
        <Setter Property="FontFamily" Value="Segoe Fluent Icons" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource Brush98}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="{TemplateBinding Foreground}"
                            Text="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Brush24}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Brush24}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolBarBtnStyle" TargetType="Button">
        <Setter Property="MinWidth" Value="24" />
        <Setter Property="Padding" Value="4,2" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource Brush98}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Brush24}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Brush44}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Brush16}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Brush44}" />

                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource Brush23}" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style
        x:Key="SimpleBtnStyle"
        BasedOn="{StaticResource {x:Static purs:StyleKeys.ButtonStyle}}"
        TargetType="Button">
        <Setter Property="pu:ButtonHelper.CornerRadius" Value="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource CornerRadiusCac}, Path=ActualHeight, FallbackValue=8}" />
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource OnPrimaryBrush}" />
        <Setter Property="pu:ButtonHelper.ClickBorderBrush" Value="Transparent" />
        <!--<Setter Property="pu:ButtonHelper.ClickBackground" Value="{DynamicResource Brush16}" />
        <Setter Property="pu:ButtonHelper.HoverBackground" Value="{DynamicResource Brush22}" />-->
        <Setter Property="Margin" Value="4" />
        <Setter Property="Padding" Value="10,6" />

    </Style>


    <Style
        x:Key="SideBarBtnStyle"
        BasedOn="{StaticResource {x:Static purs:StyleKeys.ButtonStyle}}"
        TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Height" Value="48" />
        <Setter Property="Foreground" Value="{DynamicResource OnBackgroundBrush}" />
        <Setter Property="pu:ButtonHelper.HoverForeground" Value="{DynamicResource OnSecondaryBrush}" />
        <Setter Property="pu:ButtonHelper.ClickBorderBrush" Value="Transparent" />
        <Setter Property="pu:ButtonHelper.HoverBackground" Value="{DynamicResource SecondaryBrush}" />
        <Setter Property="pu:ButtonHelper.ClickBackground" Value="{DynamicResource PrimaryBrush}" />

    </Style>
</ResourceDictionary>